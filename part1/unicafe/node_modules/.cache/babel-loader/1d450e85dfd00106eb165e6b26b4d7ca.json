{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Sandro\\\\Desktop\\\\unicafe\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst App = () => {\n  _s();\n\n  const [goodNum, setGoodNum] = useState(0);\n  const [neutralNum, setNeutralNum] = useState(0);\n  const [badNum, setBadNum] = useState(0);\n\n  const handleGood = () => {\n    setGoodNum(goodNum + 1);\n  };\n\n  const handleNeutral = () => {\n    setNeutralNum(neutralNum + 1);\n  };\n\n  const handleBadNum = () => {\n    setBadNum(badNum + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Give Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      name: \"good\",\n      handleClick: handleGood\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      name: \"neutral\",\n      handleClick: handleNeutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      name: \"bad\",\n      handleClick: handleBadNum\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      goodNum: goodNum,\n      neutralNum: neutralNum,\n      badNum: badNum\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"EnLqYyf+R2jS0GznSxxDeTv7zc8=\");\n\n_c = App;\n\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: props.handleClick,\n    children: props.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Button;\n\nconst Statistics = props => {\n  let sum = props.goodNum + props.neutralNum + props.badNum;\n  let score = (props.goodNum - props.badNum) / sum;\n  let positive = props.goodNum / sum * 100;\n  return sum > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Statistic, {\n      name: \"good\",\n      value: props.goodNum\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n      name: \"neutral\",\n      value: props.neutralNum\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n      name: \"bad\",\n      value: props.badNum\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"all \", sum]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"average \", sum > 0 ? score : 0]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"positive \", sum > 0 ? positive : 0, \" %\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No feedback given\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }, this);\n};\n\n_c3 = Statistics;\n\nconst Statistic = ({\n  name,\n  value\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = Statistic;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 73,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"Statistic\");","map":{"version":3,"sources":["C:/Users/Sandro/Desktop/unicafe/src/index.js"],"names":["React","useState","ReactDOM","App","goodNum","setGoodNum","neutralNum","setNeutralNum","badNum","setBadNum","handleGood","handleNeutral","handleBadNum","Button","props","handleClick","name","Statistics","sum","score","positive","Statistic","value","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst App = () => {\n\n  const [goodNum, setGoodNum] = useState(0);\n  const [neutralNum, setNeutralNum] = useState(0);\n  const [badNum, setBadNum] = useState(0);\n\n  const handleGood = () => { setGoodNum(goodNum + 1) };\n  const handleNeutral = () => { setNeutralNum(neutralNum + 1) };\n  const handleBadNum = () => { setBadNum(badNum + 1) };\n\n  return (\n    <div>\n      <h1>Give Feedback</h1>\n      <Button\n        name=\"good\"\n        handleClick={handleGood} />\n      <Button\n        name=\"neutral\"\n        handleClick={handleNeutral} />\n      <Button\n        name=\"bad\"\n        handleClick={handleBadNum} />\n      <h1>Statistics</h1>\n      <Statistics\n        goodNum={goodNum}\n        neutralNum={neutralNum}\n        badNum={badNum} />\n    </div>\n  )\n}\n\nconst Button = (props) => {\n  return (\n    <button onClick={props.handleClick}>{props.name}</button>\n  )\n}\n\nconst Statistics = (props) => {\n\n  let sum = props.goodNum + props.neutralNum + props.badNum;\n  let score = (props.goodNum - props.badNum) / sum;\n  let positive = props.goodNum / sum * 100;\n\n  return (\n    sum > 0 ?\n      <div>\n        <Statistic\n          name=\"good\"\n          value={props.goodNum} />\n        <Statistic\n          name=\"neutral\"\n          value={props.neutralNum} />\n        <Statistic\n          name=\"bad\"\n          value={props.badNum} />\n        <p>all {sum}</p>\n        <p>average {sum > 0 ? score : 0}</p>\n        <p>positive {sum > 0 ? positive : 0} %</p>\n      </div> :\n      <p>No feedback given</p>\n  )\n}\n\nconst Statistic = ({ name, value }) => {\n  return (\n    <p></p>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"]},"metadata":{},"sourceType":"module"}